
apt-get update
apt-get install gdb

gdb /Airborne../nav.../cns...
break  806
(gdb) run /data/DATA_cns.txt
break 832   # after reading data

break 942

1100	        if(nb_ray(iradar_ray).gt.1)then

---

regarding the SIS* file:

(base) eol-amalfi:CreateCfac brenda$ hexdump -C corrections/SIS_E_234700_235500 
00000000  16 00 00 00 09 00 0e 00  d8 07 00 00 14 43 b8 1e  |.............C..|
00000010  85 41 cc 94 03 00 ec 97  03 00 16 00 00 00 30 00  |.A............0.|
00000020  00 00 e7 03 00 00 e7 03  00 00 00 c0 79 c4 00 c0  |............y...|
00000030  79 c4 00 c0 79 c4 00 c0  79 c4 00 c0 79 c4 00 c0  |y...y...y...y...|
*
00000050  79 c4 30 00 00 00 04 00  00 00 19 fc ff ff 04 00  |y.0.............|
00000060  00 00 04 00 00 00 19 fc  ff ff 04 00 00 00 04 00  |................|
00000070  00 00 19 fc ff ff 04 00  00 00                    |..........|

To compile ...
root@f52ca00d4618:/data# gfortran -g -o readnetcdf_DBZ_VR readnetcdf_DBZ_VR.f90 -fallow-argument-mismatch -fallow-invalid-boz -I/usr/include -L/usr/local/lib -lnetcdf -lnetcdff -lcurl -L/usr/lib/aarch64-linux-gnu/hdf5/serial -lhdf5 -lhdf5_hl -I/usr/local/include

but getting error when running 

(gdb) run readnetcdf_DBZ_VR.input 
Starting program: /Airborne-Radar-QC/navigation/readnetcdf_DBZ_VR readnetcdf_DBZ_VR.input
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/aarch64-linux-gnu/libthread_db.so.1".
 Total Files =           2 file=           1   swp.1181010122951.N42RF-TS.196.-20.0_AIR_v3394                                                      
 Failed to open input file
 Netcdf return value was          -51
 Abnormal termination.

#define NC_ENOTNC       (-51)   // Not a netcdf file

use RadxConvert to convert swp.* to netcdf? YES
Then use the readnetcdf_DBZ_VR code to convert to 1.txt? YES

From Alex's notes https://github.com/Alex-DesRosiers/radarqc_scans
Navigation correction CFAC files have been added for the two airborne radar scans on 10/10/18. The 'cfac.aft' corrections apply to 'cfrad.20181010_122951.196_to_20181010_122955.166_N42RF-TS_AIR.nc' in it and the 'cfac.fore' corrections apply to 'cfrad.20181010_123925.137_to_20181010_123929.113_N42RF-TM_AIR.nc'.

Run one file at a time through the cns* code?
or run both files through the cns* code?
--> How to set the GUESS in the cns* input file? 
    1. set all GUESS values to zero
    2. set ???

How to set the other input parameters?
I can get the date, time, lon, and lat.
Using cfradial_TM_TS for the data directory and DATA_cns_TM_TS.txt for the input parameters.
What is this?  0. 40.                     ! Dmin, Dmax (km) FOR RADAR_DATA ????

There is both VG & VR in the TS data file.  Which to use?
1                          ! VDOP(1:VR,2:VG,3:VU)
Try VG, then VR


----

6/26/2025

N42RF 20181010 is Hurricane Michael data!  from NOAA  


https://www.aoml.noaa.gov/hrd/Storm_pages/michael2018/radar.html

Alex's notes are here: https://github.com/Alex-DesRosiers/HawkEdit_Testing_Data/tree/main
the document with the rinse and repeat notes is navcorr_doc.docx
also see Alex's email from Feb 21, 2023,
Alex recovered this file for the input parameters: DATA_cns_run1.dms


I think the new data flow should be:

Convert data files to cfradial
While corrections(cfac.aft; cfac.for)  != 0 +/- tolerance
  run cns_eldo_cai in python with input file? 
  accumulate cfac.aft, cfac.fore
end while.

Wait! what is accumulated?  Are the corrections applied to the cfradial files each iteration?
Are there starting cfac.aft & cfac.fore files that are applied at each iteration?

6/27/2025
I guess I will have to create my own test data. 
1. test data with cfac ==> 0
2. test data with known cfac

What would cause the cfac's to be zero?

Generally, the algorithm is:
fill xmat, vect --> perform chol_inv to solve system of linear equations --> res is solution vector which is the correction factors for each of the variables  --> cfacs

NOTE: isim is always zero; set in the input parameter file; 
      consider removing all the code with isim == 1???

Calling structure:

cns_eldo_cai
    control_for_end_of_all text_files_wo_gotos   # fills dgate_corr
        ze_actions
            kdzsurf_k...    # uses dgate_corr
                fills vect_dzsurf, vect_vsurf, xmat
    iend_eq2...
    calculate_navigation_errors
